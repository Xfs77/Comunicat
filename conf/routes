# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET /predeterminado 			controllers.Application.predeterminado()
GET    /idioma/:idioma                           controllers.Application.idioma(idioma: String)

GET	/pare/borrar/       controllers.Parefill.borrarPare()
GET	/fills/        controllers.Parefill.Fills()


#Comunitat

GET  /subcomunitats/:pare	controllers.Comunitats.llistarSubComunitats(pare:models.Comunitat,page: Int ?=1 )
GET  /comunitats/	controllers.Comunitats.llistarComunitats(page: Int ?=1 )
GET  /comunitats/nova/:pare	controllers.Comunitats.novaComunitat(pare:models.Comunitat)
GET	/detall_comunitats/:comunitat  	controllers.Comunitats.detallComunitat(comunitat: models.Comunitat)
GET	/contactes/:comunitat  	controllers.Comunitats.llistarContactes(comunitat: models.Comunitat,page: Int ?=1)

POST /subcomunitats/:pare    	controllers.Comunitats.guardarComunitat(pare:models.Comunitat, nou:Boolean)
DELETE	/comunitats/borrar/:comunitat           controllers.Comunitats.borrarComunitat(comunitat: models.Comunitat)


GET  /elements/:comunitat	controllers.Comunitats.llistarElements(comunitat:models.Comunitat,page: Int ?=1 )
GET  /elements/nou/:comunitat	controllers.Comunitats.nouElement(comunitat:models.Comunitat)
GET	/detall_elements/:element  	controllers.Comunitats.detallElement(element: models.Element)
POST /elements/:comunitat    	controllers.Comunitats.guardarElement(comunitat:models.Comunitat,nou:Boolean)
DELETE	/elements/borrar/:element           controllers.Comunitats.borrarElement(element: models.Element)

GET  /usuaris/	controllers.Usuaris.llistarUsuaris(page: Int ?=1 )
GET  /usuaris/llistarFiltrats	controllers.Usuaris.llistarUsuarisFiltrats(page: Int ?=1 )

GET  /usuaris/nou/	controllers.Usuaris.nouUsuari()
GET	/detall_usuaris/:usuari 	controllers.Usuaris.detallUsuari(usuari: models.Usuari)
POST /usuaris/	controllers.Usuaris.guardarUsuari(nou:Boolean)
GET /usuaris/correu_alta/:usuari	controllers.Usuaris.correuAlta(usuari: models.Usuari)
GET /usuaris/canvi_password/	controllers.Usuaris.canviPassword()
GET /usuaris/efectuar_canvi_password/	controllers.Usuaris.efectuarCanviPassword()
GET /usuaris/elements_assignats/:usuari	controllers.Usuaris.llistarElementsAssignats(usuari:models.Usuari,page:Int ?=1)
GET  /usuaris/assignacio_elements/:usuari   controllers.Usuaris.assignarElements(usuari:models.Usuari)
POST  /usuaris/realitzar_assignacio_elements/:usuari        controllers.Usuaris.realitzarAssignacioElements(usuari:models.Usuari)
DELETE	/usuaris/borrar/:usuari           controllers.Usuaris.borrarUsuari(usuari: models.Usuari)
DELETE	/usuaris/borrar_element_assignat/:usuari/:element/:tipus          controllers.Usuaris.borrarElementAssignat(usuari: models.Usuari,element: models.Element,tipus:models.TipusVei)


GET  /notes/llistarFiltrades	controllers.Notes.llistarNotesFiltrades(page: Int ?=1 )

GET  /notes/nova/	controllers.Notes.novaNota()
GET  /notes/detall/:nota	controllers.Notes.detallNota(nota:models.Nota)

GET  /moviments_nota/:nota	controllers.Notes.llistarMoviments(nota:models.Nota,page: Int ?=1 )
DELETE	/notes/moviments/borrar/:moviment           controllers.Notes.borrarMovimentNota(moviment: models.MovimentNota)
GET  /notes/moviments/nou/:nota	controllers.Notes.nouMovimentNota(nota:models.Nota)

POST /notes/   	controllers.Notes.guardarNota(nou:Boolean)

DELETE	/notes/borrar/:nota           controllers.Notes.borrarNota(nota: models.Nota)

POST /notes/moviments   	controllers.Notes.guardarMovimentNota(nou:Boolean)
GET  /notes/moviments/detall/:moviment	controllers.Notes.detallMovimentNota(moviment:models.MovimentNota)
GET  /notes/notificar/:nota	controllers.Notes.notificarNota(nota:models.Nota)



GET  /login        controllers.Application.login()
GET     /logout                     controllers.Application.logout()
POST /authenticate controllers.Application.authenticate()


GET  /reunions/nova/	controllers.Reunions.novaReunio()
GET  /reunions/	controllers.Reunions.llistarReunions(page: Int ?=1 )
GET  /reunions/llistarFiltrades	controllers.Reunions.llistarReunionsFiltrades(page: Int ?=1 )

GET  /reunions/detall/:reunio	controllers.Reunions.detallReunio(reunio:models.Reunio)
POST /reunions/guardar/    	controllers.Reunions.guardarReunio(nou:Boolean)
DELETE	/reunions/borrar/:reunio           controllers.Reunions.borrarReunio(reunio: models.Reunio)




GET  /reunions/documents/nou/:reunio	controllers.Reunions.nouDocument(reunio:models.Reunio)
GET  /reunions/documents/:reunio	controllers.Reunions.llistarDocuments(reunio:models.Reunio,page: Int ?=1 )
GET  /reunions/documents/detall/:document	controllers.Reunions.detallDocument(document:models.Document)
POST /reunions/documents/:reunio    	controllers.Reunions.guardarDocument(reunio:models.Reunio,nou:Boolean)
DELETE	/reunions/documents/borrar/:document          controllers.Reunions.borrarDocument(document: models.Document)
GET  /reunions/documents/obrir/:codi	controllers.Reunions.readFile(codi: String)
GET  /reunions/notificar/:reunio	controllers.Reunions.notificarReunio(reunio:models.Reunio)





# Javascript routing
GET    /assets/javascripts/routes      controllers.Application.javascriptRoutes()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)