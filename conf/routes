# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#GENERAL
GET /						                        	controllers.Application.index()
GET /predeterminado/ 									controllers.Application.predeterminado()
GET /idioma/:idioma                           			controllers.Application.idioma(idioma: String)
GET  /login        										controllers.Application.login()
GET     /logout                     					controllers.Application.logout()
POST /authenticate 										controllers.Application.authenticate()

#COMUNITAT
GET /subcomunitats/:pare								controllers.Comunitats.llistarSubComunitats(pare:models.Comunitat,page: Int ?=1 )
GET /comunitats/										controllers.Comunitats.llistarComunitats(page: Int ?=1 )
GET /comunitats/nova/:pare								controllers.Comunitats.novaComunitat(pare:models.Comunitat)
GET	/comunitats/detall/:comunitat  						controllers.Comunitats.detallComunitat(comunitat: models.Comunitat)
GET	/comunitats/contactes/:comunitat  					controllers.Comunitats.llistarContactes(comunitat: models.Comunitat,page: Int ?=1)
POST /comunitats/guardar/:pare   					 	controllers.Comunitats.guardarComunitat(pare:models.Comunitat, nou:Boolean)
DELETE /comunitats/borrar/:comunitat           			controllers.Comunitats.borrarComunitat(comunitat: models.Comunitat)

#ELEMENTS
GET /elements/:comunitat								controllers.Comunitats.llistarElements(comunitat:models.Comunitat,page: Int ?=1 )
GET /elements/nou/:comunitat							controllers.Comunitats.nouElement(comunitat:models.Comunitat)
GET	/elements/:element  								controllers.Comunitats.detallElement(element: models.Element)
POST /elements/:comunitat    							controllers.Comunitats.guardarElement(comunitat:models.Comunitat,nou:Boolean)
DELETE /elements/borrar/:element         				controllers.Comunitats.borrarElement(element: models.Element)
GET	/elements/veins/:element  							controllers.Comunitats.llistarUsuarisAssignats(element: models.Element, page:Int ?=1)

#USUARIS
GET  /usuaris/											controllers.Usuaris.llistarUsuaris(page: Int ?=1 )
GET  /usuaris/llistarFiltrats/							controllers.Usuaris.llistarUsuarisFiltrats(page: Int ?=1 )
GET  /usuaris/nou/										controllers.Usuaris.nouUsuari()
GET	/usuaris/detall/:usuari 							controllers.Usuaris.detallUsuari(usuari: models.Usuari)
POST /usuaris/guardar/									controllers.Usuaris.guardarUsuari(nou:Boolean)
GET /usuaris/correu/:usuari								controllers.Usuaris.correuAlta(usuari: models.Usuari)
GET /usuaris/password/canvi/							controllers.Usuaris.canviPassword()
GET /usuaris/password/canvi/guardar/					controllers.Usuaris.efectuarCanviPassword()
GET /usuaris/elements/assignats/:usuari					controllers.Usuaris.llistarElementsAssignats(usuari:models.Usuari,page:Int ?=1)
GET  /usuaris/assignacio/elements/:usuari   			controllers.Usuaris.assignarElements(usuari:models.Usuari)
POST  /usuaris/assignacio/elements/guardar/:usuari      controllers.Usuaris.realitzarAssignacioElements(usuari:models.Usuari)
DELETE	/usuaris/borrar/:usuari					        controllers.Usuaris.borrarUsuari(usuari: models.Usuari)
DELETE	/usuaris/assignacio/elements/borrar/:usuari/:element/:tipus   controllers.Usuaris.borrarElementAssignat(usuari: models.Usuari,element: models.Element,tipus:models.TipusVei)

#NOTES
GET  /notes/llistar/									controllers.Notes.llistarNotesFiltrades(page: Int ?=1 )
GET  /notes/nova/										controllers.Notes.novaNota()
GET  /notes/detall/:nota								controllers.Notes.detallNota(nota:models.Nota)
GET  /nota/moviments/:nota								controllers.Notes.llistarMoviments(nota:models.Nota,page: Int ?=1 )
DELETE	/notes/moviments/borrar/:moviment           	controllers.Notes.borrarMovimentNota(moviment: models.MovimentNota)
GET  /notes/moviments/nou/:nota							controllers.Notes.nouMovimentNota(nota:models.Nota)
POST /notes/guardar/   									controllers.Notes.guardarNota(nou:Boolean)
DELETE	/notes/borrar/:nota           					controllers.Notes.borrarNota(nota: models.Nota)
POST /notes/moviments/guardar/  						controllers.Notes.guardarMovimentNota(nou:Boolean)
GET  /notes/moviments/detall/:moviment					controllers.Notes.detallMovimentNota(moviment:models.MovimentNota)
GET  /notes/notificar/:nota								controllers.Notes.notificarNota(nota:models.Nota)

#REUNIONS
GET  /reunions/nova/									controllers.Reunions.novaReunio()
# GET  /reunions/										controllers.Reunions.llistarReunions(page: Int ?=1 )
GET  /reunions/llistar									controllers.Reunions.llistarReunionsFiltrades(page: Int ?=1 )
GET  /reunions/detall/:reunio							controllers.Reunions.detallReunio(reunio:models.Reunio)
POST /reunions/guardar/    								controllers.Reunions.guardarReunio(nou:Boolean)
DELETE	/reunions/borrar/:reunio           				controllers.Reunions.borrarReunio(reunio: models.Reunio)
GET  /reunions/documents/nou/:reunio					controllers.Reunions.nouDocument(reunio:models.Reunio)
GET  /reunions/documents/llistar/:reunio				controllers.Reunions.llistarDocuments(reunio:models.Reunio,page: Int ?=1 )
GET  /reunions/documents/detall/:document				controllers.Reunions.detallDocument(document:models.Document)
POST /reunions/documents/guardar/:reunio    			controllers.Reunions.guardarDocument(reunio:models.Reunio,nou:Boolean)
DELETE	/reunions/documents/borrar/:document          	controllers.Reunions.borrarDocument(document: models.Document)
GET  /reunions/documents/obrir/:codi					controllers.Reunions.readFile(codi: Int)
GET  /reunions/notificar/:reunio						controllers.Reunions.notificarReunio(reunio:models.Reunio)

# Javascript routing
GET    /assets/javascripts/routes      controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)